{
  "detail": {
    "businessContext": "## Prompt 上下文\n\n- 业务逻辑。\n  - 文档信息。最新业务相关文档\n- 代码逻辑。\n  - 代码是否符合编码规范。\n  - 代码是否符合设计规范。\n- 需求信息。标准的提交格式：\n  - feat(devops): init first review command #8\n\n## Prompt 策略\n\n1. 如果变更的代码行数少，则只审核业务含义 —— 根据提交信息，解析对应的 story 名称，然后进行检查。\n2. 根据变更的代码，生成对应的代码信息，作为上下文的一部分。\n3. 如果变更的行数多，则需要进行代码逻辑的检查，以及对应的语法检查。\n4. 如果单次变更的行数过多，则需要进行拆分。",
    "fullMessage": "feat(devops): add explain prompt for testing #8",
    "changes": "client/devops-genius/docs/autodev-review.md=new file mode 100644\nindex 0000000..0363bb1\n--- /dev/null\n+++ b/client/devops-genius/docs/autodev-review.md\n@@ -0,0 +1,110 @@\n+You are a seasoned software developer, and I'm seeking your expertise to review the following code:\n+\n+- Please provide an overview of the business objectives and the context behind this commit. This will ensure that the code aligns with the project's requirements and goals.\n+- Focus on critical algorithms, logical flow, and design decisions within the code. Discuss how these changes impact the core functionality and the overall structure of the code.\n+- Identify and highlight any potential issues or risks introduced by these code changes. This will help reviewers pay special attention to areas that may require improvement or further analysis.\n+- Emphasize the importance of compatibility and consistency with the existing codebase. Ensure that the code adheres to the established standards and practices for code uniformity and long-term maintainability.\n+- Lastly, provide a concise high-level summary that encapsulates the key aspects of this commit. This summary should enable reviewers to quickly grasp the major changes in this update.\n+\n+PS: Your insights and feedback are invaluable in ensuring the quality and reliability of this code. Thank you for your assistance.\n+Commit Message: feat: update test for samples\\n\\nCode Changes:\\n\\nIndex: build.gradle.kts\n+--- a/build.gradle.kts\n++++ b/build.gradle.kts\n+@@ -6,7 +6,6 @@\n+\n+group = \"cc.unitmesh.untitled\"\n+version = \"0.0.1-SNAPSHOT\"\n+-java.sourceCompatibility = JavaVersion.VERSION_17\n+\n+repositories {\n+mavenCentral()\n+@@ -17,6 +16,7 @@\n+implementation(\"org.springframework.boot:spring-boot-starter-jdbc\")\n+implementation(\"org.springframework.boot:spring-boot-starter-data-jdbc\")\n+implementation(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n++    testImplementation(\"junit:junit:4.13.1\")\n+\n+     developmentOnly(\"org.springframework.boot:spring-boot-devtools\")\n+\n+Index: src/main/java/cc/unitmesh/untitled/demo/controller/BlogController.java\n+--- a/src/main/java/cc/unitmesh/untitled/demo/controller/BlogController.java\n++++ b/src/main/java/cc/unitmesh/untitled/demo/controller/BlogController.java\n+@@ -19,7 +19,12 @@\n+this.blogService = blogService;\n+}\n+\n+-    // create blog\n++    @ApiOperation(value = \"Get Blog by id\")\n++    @GetMapping(\"/{id}\")\n++    public BlogPost getBlog(@PathVariable Long id) {\n++        return blogService.getBlogById(id);\n++    }\n++\n+@ApiOperation(value = \"Create a new blog\")\n+@PostMapping(\"/\")\n+public BlogPost createBlog(@RequestBody CreateBlogRequest request) {\n+Index: src/main/java/cc/unitmesh/untitled/demo/entity/BlogPost.java\n+--- a/src/main/java/cc/unitmesh/untitled/demo/entity/BlogPost.java\n++++ b/src/main/java/cc/unitmesh/untitled/demo/entity/BlogPost.java\n+@@ -25,6 +25,10 @@\n+\n+}\n+\n++    public void setId(Long id) {\n++        this.id = id;\n++    }\n++\n+public Long getId() {\n+return this.id;\n+}\n+Index: src/test/java/cc/unitmesh/untitled/demo/controller/BlogControllerTest.java\n+--- a/src/test/java/cc/unitmesh/untitled/demo/controller/BlogControllerTest.java\n++++ b/src/test/java/cc/unitmesh/untitled/demo/controller/BlogControllerTest.java\n+@@ -1,19 +1,43 @@\n+package cc.unitmesh.untitled.demo.controller;\n+\n++import cc.unitmesh.untitled.demo.entity.BlogPost;\n++import cc.unitmesh.untitled.demo.repository.BlogRepository;\n+import org.junit.jupiter.api.Test;\n++import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n++import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n++import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.web.servlet.MockMvc;\n+\n++import java.util.Optional;\n++\n++import static org.hamcrest.Matchers.containsString;\n++import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n++import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n++import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n++\n+@SpringBootTest\n++@AutoConfigureMockMvc\n+class BlogControllerTest {\n+\n+-    @SuppressWarnings(\"SpringJavaInjectionPointsAutowiringInspection\")\n+     @Autowired\n+     private MockMvc mockMvc;\n++\n++    @MockBean\n++    private BlogRepository blogRepository;\n++\n+@Test\n+-    void should_get_blog_one_when_has_blog() throws Exception {\n++    public void should_return_correct_blog_information_when_post_item() throws Exception {\n++        BlogPost mockBlog = new BlogPost(\"Test Title\", \"Test Content\", \"Test Author\");\n++        mockBlog.setId(1L);\n+\n++        Mockito.when(blogRepository.findById(1L)).thenReturn(Optional.of(mockBlog));\n+\n++        mockMvc.perform(get(\"/blog/1\"))\n++                .andExpect(status().isOk())\n++                .andExpect(content().string(containsString(\"Test Title\")))\n++                .andExpect(content().string(containsString(\"Test Content\")));\n+  }\n+  -}\n+  \\ No newline at end of file\n+  +}\n++\n, client/devops-genius/docs/jetbrains-explain.md=new file mode 100644\nindex 0000000..715e07d\n--- /dev/null\n+++ b/client/devops-genius/docs/jetbrains-explain.md\n@@ -0,0 +1,38 @@\n+You are an senior software developer who can help me understand a commit with business.\n+Explain this commit.\n+Do not mention filenames.\n+Ignore any changes to imports and requires.\n+Keep the explanation under five sentences. Don't explain changes in test files.    \n+\n+Message: Use freeCompilerArgs += \"-Xjsr305=strict\"\n+\n+See https://youtrack.jetbrains.com/issue/KT-41985\n+\n+Changes:\n+\n+    Index: README.adoc\n+===================================================================\n+--- a/README.adoc\t(revision b6ed535e3d4b6734a5695c32cc23ce8d5524b3eb)\n++++ b/README.adoc\t(revision 0906a3d831fea14898e4f0914d6b64531f6c3ade)\n+@@ -103,7 +103,7 @@\n+ ----\n+tasks.withType<KotlinCompile> {\n+kotlinOptions {\n+-\t\tfreeCompilerArgs = listOf(\"-Xjsr305=strict\")\n++\t\tfreeCompilerArgs += \"-Xjsr305=strict\"\n+     }\n+     }\n+ ----\n+Index: build.gradle.kts\n+===================================================================\n+--- a/build.gradle.kts\t(revision b6ed535e3d4b6734a5695c32cc23ce8d5524b3eb)\n++++ b/build.gradle.kts\t(revision 0906a3d831fea14898e4f0914d6b64531f6c3ade)\n+@@ -39,7 +39,7 @@\n+\n+tasks.withType<KotlinCompile> {\n+kotlinOptions {\n+-\t\tfreeCompilerArgs = listOf(\"-Xjsr305=strict\")\n++\t\tfreeCompilerArgs += \"-Xjsr305=strict\"\n+     }\n+     }\n+ \n\\ No newline at end of file\n, client/devops-genius/src/main/resources/codereview/example.json=new file mode 100644\nindex 0000000..4caec83\n--- /dev/null\n+++ b/client/devops-genius/src/main/resources/codereview/example.json\n@@ -0,0 +1,6 @@\n+{\n+  \"detail\": {\n+    \"fullMessage\": \"test(devops): aadd testcase for parse story #8\",\n+    \"changes\": \"\"\n+  }\n+}\n\\ No newline at end of file\n, client/devops-genius/src/main/resources/codereview/openai.prompt=deleted file mode 100644\nindex e69de29..0000000\n--- a/client/devops-genius/src/main/resources/codereview/openai.prompt\n+++ /dev/null\n, client/devops-genius/src/main/resources/codereview/simple-review.open-ai.vm=new file mode 100644\nindex 0000000..1c3e28e\n--- /dev/null\n+++ b/client/devops-genius/src/main/resources/codereview/simple-review.open-ai.vm\n@@ -0,0 +1,12 @@\n+You are an experienced software developer who can help me understand a commit.\n+- Explain this commit.\n+- Do not mention filenames.\n+- Ignore any changes to imports and requires.\n+- Keep the explanation under five sentences.\n+- Don't explain changes in test files.\n+\n+Message: ${detail.fullMessage}\n+\n+\n+Changes: ${detail.changes}\n+\n}\n"
  }
}